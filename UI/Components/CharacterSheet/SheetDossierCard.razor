@using Models.Characters
@using UI.Conveniences

<MudCard>
	<MudCardHeader>
		<CardHeaderContent>
			<MudText Typo="Typo.h4">Dossier</MudText>
		</CardHeaderContent>
		<CardHeaderActions>
			<MudToggleIconButton Color="Color.Primary" ToggledColor="Color.Secondary" Variant="Variant.Filled" Title="Enable Fix Mode" ToggledTitle="Disable Fix Mode" Icon="@Icons.Material.Filled.EditOff" ToggledIcon="@Icons.Material.Filled.Edit" @bind-Toggled="@IsFixMode" />
		</CardHeaderActions>
	</MudCardHeader>
	<MudCardContent>
		<MudGrid>
			<MudItem xs="8">
				<MudTextField @bind-Value="Dossier.Name" HelperText="Name" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" />
			</MudItem>
			<MudItem xs="4">
				<MudTextField @bind-Value="Dossier.Alias" HelperText="Alias" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" />
			</MudItem>
		</MudGrid>
		<MudStack>
			<MudTextField @bind-Value="Dossier.Background.Description" HelperText="@BackgroundHelperText" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" Lines="3" />
			<MudTextField @bind-Value="Dossier.Heritage.Description" HelperText="@HeritageHelperText" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" Lines="3" />
			<MudTextField @bind-Value="Dossier.Vice.Description" HelperText="@ViceHelperText" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" Lines="3" />
			<MudTextField @bind-Value="Dossier.Look" HelperText="Look" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" Lines="3" />
		</MudStack>
	</MudCardContent>
</MudCard>

@code
{
	[Parameter, EditorRequired]
	public Dossier Dossier { get; set; } = new();

	bool IsFixMode { get; set; } = false;

	string BackgroundHelperText =>
		$"Background: {Dossier.Background.Background}";

	string HeritageHelperText =>
		$"Heritage: {Dossier.Heritage.Heritage.DisplayName()}";

	string ViceHelperText =>
		$"Vice: {Dossier.Vice.Vice}";
}
