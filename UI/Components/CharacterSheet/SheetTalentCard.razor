@using Domain.Characters

<MudCard>
	<MudCardHeader>
		@*<MudStack Row="true" Justify="Justify.SpaceBetween" Class="flex-grow-1">*@
		<CardHeaderContent>
			<MudText Typo="Typo.h4">Talents</MudText>
		</CardHeaderContent>
		<CardHeaderActions>
			<MudToggleIconButton Color="Color.Primary" ToggledColor="Color.Secondary" Variant="Variant.Filled" Title="Enable Fix Mode" ToggledTitle="Disable Fix Mode" Icon="@Icons.Material.Filled.EditOff" ToggledIcon="@Icons.Material.Filled.Edit" @bind-Toggled="@IsFixMode" />
		</CardHeaderActions>
		@*</MudStack>*@
	</MudCardHeader>
	<CascadingValue Name="IsFixMode" Value="@IsFixMode">
		<MudCardContent>
			<MudGrid>
				<MudItem Class="flex-grow-1">
					<SheetTalentAttribute Attribute="Talent.Insight" Name="AttributeName.Insight" />
				</MudItem>
				<MudItem Class="flex-grow-0">
					<MudDivider Vertical="true" />
				</MudItem>
				<MudItem Class="flex-grow-1">
					<SheetTalentAttribute Attribute="Talent.Prowess" Name="AttributeName.Prowess" />
				</MudItem>
				<MudItem Class="flex-grow-0">
					<MudDivider Vertical="true" />
				</MudItem>
				<MudItem Class="flex-grow-1">
					<SheetTalentAttribute Attribute="Talent.Resolve" Name="AttributeName.Resolve" />
				</MudItem>
			</MudGrid>
		</MudCardContent>
	</CascadingValue>
</MudCard>

@code
{
	[Parameter, EditorRequired]
	public Talent Talent { get; set; } = Talent.Empty();

	public bool IsFixMode { get; set; } = false;
}