@using Domain.Characters
@using Domain.Common
@using static Constants.Classes

<MudCard>
	<MudCardHeader>
		<CardHeaderContent>
			@*<MudStack Row="true" Justify="Justify.SpaceBetween" Class="flex-grow-1">*@
			<MudText Typo="Typo.h4">Health</MudText>
			@*</MudStack>*@
		</CardHeaderContent>
		<CardHeaderActions>
			<MudToggleIconButton Color="Color.Primary" ToggledColor="Color.Secondary" Variant="Variant.Filled" Title="Enable Fix Mode" ToggledTitle="Disable Fix Mode" Icon="@Icons.Material.Filled.EditOff" ToggledIcon="@Icons.Material.Filled.Edit" @bind-Toggled="@IsFixMode" />
		</CardHeaderActions>
	</MudCardHeader>
	<MudCardContent>
		<MudGrid>
			<MudItem xs="12">
				<MudSlider @bind-Value="@Monitor.Stress.CurrentStress" Size="Size.Medium" TickMarks="true" TickMarkLabels="@StressLabels" Max="@MonitorStress.MaxStress" Variant="@Variant.Filled" Color="@StressColor">
					Stress
				</MudSlider>
			</MudItem>
			<MudItem xs="12">
				<SheetMonitorTrauma IsFixMode="IsFixMode" Monitor="Monitor" />
			</MudItem>
			<MudItem xs="12">
				<SheetMonitorHarm IsFixMode="IsFixMode" Harm="Monitor.Harm" />
			</MudItem>
			<MudItem xs="12">
				<SheetMonitorArmor Character="Character" />
			</MudItem>
			<MudItem xs="12">
				<SheetMonitorRecovery IsFixMode="IsFixMode" Monitor="Monitor" />
			</MudItem>
		</MudGrid>
	</MudCardContent>
</MudCard>

@code
{
	[Parameter, EditorRequired]
	public Character Character { get; set; } = Character.Empty();

	public Monitor Monitor => Character.Monitor;

	bool IsFixMode { get; set; } = false;

	string[] StressLabels { get; } =
		Enumerable.Range(0, 10)
			.Select(i => i.ToString())
			.ToArray();

	Color StressColor =>
		Monitor.Stress.CurrentStress > 6 ? Color.Error
		: Monitor.Stress.CurrentStress > 3 ? Color.Warning
		: Color.Primary;
}
