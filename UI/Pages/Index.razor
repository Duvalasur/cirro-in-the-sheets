@page "/"
@using Models.Characters
@using Persistence.Json
@using UI.Services
@inject IStorageService Storage

<MudContainer>
	<MudText Typo=Typo.h1>Blades in the Dark Character Sheet App</MudText>

	<MudStack>
		@foreach (var character in Characters)
		{
			<MudCard>
				<MudCardHeader>
					<MudStack>
						<MudLink Href="@character.Link">
							<MudText>@character.Alias the @character.Playbook</MudText>
						</MudLink>
					</MudStack>
				</MudCardHeader>
				<MudCardContent>
					<MudStack>
						<MudText>@character.Blurb</MudText>
					</MudStack>
				</MudCardContent>
			</MudCard>
		}

		<MudCard>
			<MudCardContent>
				<MudLink Href="/new" Typo=Typo.h2>Create a new character!</MudLink>
			</MudCardContent>
		</MudCard>
	</MudStack>
</MudContainer>

@code
{
	IReadOnlyCollection<VIndexCharacter> Characters { get; set; } = Array.Empty<VIndexCharacter>();

	protected override async Task OnInitializedAsync()
	{
		var characters = await Storage.LoadAll();
		Characters = characters.Select(c => new VIndexCharacter(c))
			.ToArray();

		await base.OnInitializedAsync();
	}
}