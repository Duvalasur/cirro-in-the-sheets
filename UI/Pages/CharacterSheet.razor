@page "/sheets/{Id}"
@using Models.Characters
@using UI.Components
@using UI.Components.CharacterSheet
@using UI.Services
@inject IStorageService Storage

<MudContainer>
	<MudGrid>
		<MudItem xs="12" lg="6">
			<SheetDossierCard Dossier="Character.Dossier" />
		</MudItem>
		<MudItem xs="12" lg="6">
			<SheetMonitorCard Character="Character" />
		</MudItem>
		<MudItem xs="12" lg="6">
			<SheetTalentCard Talent="Character.Talent" />
		</MudItem>
		<MudItem xs="12" lg="6">
			<SheetAbilitiesCard Playbook="Character.Playbook" />
		</MudItem>
		<MudItem xs="12" lg="6">
			<SheetRolodexCard Rolodex="Character.Rolodex" Playbook="Character.Playbook.Option" />
		</MudItem>
		<MudItem xs="12" lg="6">
			<SheetGearCard Gear="Character.Gear" Playbook="Character.Playbook.Option" />
		</MudItem>
	</MudGrid>
</MudContainer>

@code
{
	[Parameter, EditorRequired]
	public string Id { get; set; } = string.Empty;

	public Character Character { get; set; } = Character.Empty();

	protected override async Task OnInitializedAsync()
	{
		Character = await Storage.Load(Id);
	}
}
